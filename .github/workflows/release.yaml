name: "Publish Release"
on:
  push:
    tags:
      - 'v*'
jobs:
  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.17'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Make-manifest
        run: |
          cd opensearch-operator
          make manifests
      - name: set Env
        id: github-ver
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build and Push docker image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          cd opensearch-operator
          go version
          go env
          go get opensearch.opster.io/pkg/builders
          go get opensearch.opster.io/pkg/helpers
          make test
          export IMG=public.ecr.aws/opsterio/opensearch-operator:$RELEASE_VERSION
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opsterio
          docker buildx build --platform="linux/amd64,linux/arm,linux/arm64" . -f Dockerfile -t $IMG --push
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
#       - name: Copy-crd-to-chart-dir
#         run: |
#           git checkout -b ${RELEASE_VERSION}-release
#           cd opensearch-operator
#           cp ./config/crd/bases/opensearch.opster.io_opensearchclusters.yaml ../charts/opensearch-operator/templates/opensearchclusters.opensearch.opster.io-crd.yaml
#           sed -i -e 's/^appVersion.*/appVersion: '$RELEASE_VERSION'/' ../charts/opensearch-operator/Chart.yaml
#           sed -i -e 's/tag.*/tag: '$RELEASE_VERSION'/' ../charts/opensearch-operator/values.yaml
#           git config user.name "GitHub Actions Bot"
#           git config user.email "<>"
#           git add ../charts/opensearch-operator/templates/opensearchclusters.opensearch.opster.io-crd.yaml
#           git add ../charts/opensearch-operator/Chart.yaml
#           git add ../charts/opensearch-operator/values.yaml
#           git commit -m "Update release appVersion on Chart ${RELEASE_VERSION}"
#           git pull main:${RELEASE_VERSION}-release
#           git push --set-upstream origin ${RELEASE_VERSION}-release

#          git request-pull ${RELEASE_VERSION}-release https://github.com/Opster/opensearch-k8s-operator.git main

###### After build and push the images we can now prepper the chart release - just after the chart release will create a new helm-release workflow will run.
###### that's a problem because we need to marge the version change commit first so the chart will be created with the new version.
#      - name: Create-Helm-Release
#        id: create_helm_release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: helm-$RELEASE_VERSION
#          release_name: helm-$RELEASE_VERSION
#          draft: false
#          prerelease: false
